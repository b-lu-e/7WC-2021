import sys
def nextPos1(position):
    R = position[0]
    C = position[1]
    L = [((R + 2), (C - 1)),((R + 2), (C + 1)),((R + 1), (C + 2)),((R - 1), (C + 2)),((R - 2), (C + 1)),((R - 2), (C - 1)),((R+1),(C-2)),((R-1),(C-2))]
    L2 = []
    for item in L:
        if item[0]<=8 and item[0]>=1 and item[1]<=8 and item[1]>=1:
            L2.append(item)
    return L2

def nextPositions(positions):
    combinedPos = []
    combinedPos2 = []
    for item in positions:
        listpos = nextPos1(item)
        combinedPos = combinedPos + listpos
    for i in combinedPos:
        if i not in combinedPos2:
            combinedPos2.append(i)
    return combinedPos2

counter = 0
PavCol,PavRow = list(map(int, input().split(' '))) 
KevCol,KevRow = list(map(int, input().split(' ')))
x = nextPos1((PavRow,PavCol))
if KevRow == PavRow - 1 and KevCol == PavCol:
    print("0")
    sys.exit()
KevRow = KevRow + 1
while not((KevRow,KevCol)in x)and not(KevRow >= 8):
        KevRow += 1
        x = nextPositions(x)
        counter += 1
if KevRow >= 8:
    print("Not possible")
else:
    print(counter+1)
